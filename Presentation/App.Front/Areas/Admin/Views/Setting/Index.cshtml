@using Resources
@using App.Domain.Entities.Setting
@model IEnumerable<Setting>

@{
	ViewBag.Title = FormUI.Setting;
	var grid = new WebGrid((IEnumerable<Setting>)ViewBag.Settings, rowsPerPage: 50);
}

<div class="navbar navbar-default" role="search">
	<ul class="nav navbar-nav navbar-form">
		<li>
			<a class="btn btn-default btn-sm" id="hypCreate"><i class="fa fa-plus"></i>@FormUI.CreateNew</a>
		</li>
	</ul>
	<div class="col-sm-5">
		<div class="form-body">
			<div class="form-group">

				<div class="col-md-11">
					<div class="form-group">
						<input id="txtSearch" dir="@Url.Action("Index")"  type="text" name="search" class="form-control" value="@ViewBag.keywords" placeholder="@FormUI.Search"/>
					</div>
				</div>
				<div class="control-label col-md-1">
					<button type="submit" value="Search" class="btn btn-success" onclick="searchForSetting();">@FormUI.Search</button>
				</div>

			</div>
		</div>
	</div>
</div>

@using (Html.BeginForm("CreateOrSave", "Setting", FormMethod.Post, new { data_container = ViewContext.RouteData.Values["controller"], enctype = "multipart/form-data" }))
{
	@MvcHtmlString.Create(
				grid.GetHtml(
					htmlAttributes: new
					{
						id = "grid",
						@class = "app-grid table table-color table-bordered table-striped table-condensed flip-content table-hover dataTable"
					},
					emptyRowCellValue: "No Records Found",
					headerStyle: "grid-header",
					footerStyle: "table-pager",
					columns: grid.Columns(

						grid.Column(null, null,
							format: @<text><input id="hddId" name="hddId" type="hidden" value="@item.Value.Id" />
							</text>
																),

															grid.Column("Name",
																format: item
																	=> Html.EditableTextBox(((Setting)item.Value).Name
																		, "ResourceName", ((Setting)item.Value).Id.ToString()))

															, grid.Column("Value",
																format: item
																	=> Html.EditableTextBox(((Setting)item.Value).Value
																		, "ResourceValue", ((Setting)item.Value).Id.ToString()))

															, grid.Column(FormUI.Edit,
																format: item => Html.DisplayRecordOptions(), canSort: false, style: "colOption")

															)
														)
														.ToString()
														.Replace("{CheckBoxHeading}", "<div class='text-center'><input type='checkbox' id='allBox'/></div>")
													)
}

@Html.Hidden("dir", grid.SortDirection)
@Html.Hidden("col", grid.SortColumn)

<script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
<script src="/signalr/hubs"></script>

<script>
	function searchForSetting() {
		window.location = '@Url.Action("Index", "Setting")?keywords=' + $('#txtSearch').val();
	}

	$(function() {
		try {
			var dir = $("#dir").val();
			var col = $("#col").val();
			var header = $("th a[href*=" + col + "]");
			if (dir === "Ascending") {
				header.text(header.text() + "  ▲");
			}
			if (dir === "Descending") {
				header.text(header.text() + "  ▼");
			}

		} catch (e) {

		}

		$("#txtSearch").focus();
		$("#txtSearch").keypress(function (event) {
			var keycode = (event.keyCode ? event.keyCode : event.which);
			if (keycode === 13) {
				var url = $(this).attr("dir");
				var keywords = $(this).val();
				App.blockUI({
					target: "body",
					boxed: true
				});
				window.location.href = url + "?keywords=" + keywords;
			}
		});

		$(".edit-button").on("click",
			function() {
				var row = $(this).closest("tr");
				$(".record-toolbar li", row).toggleClass("hide");
				$("input, select, textarea", row).toggleClass("hide");
				$("td", row).each(function() {
					var cell = $(this, row);
					var cellValue = $(".cell-value", cell);
					if (cellValue.length > 0) {
						$("input", cell).val(cellValue.text());
					}
				});
				$(".cell-value", row).toggleClass("hide");
			});

		$(".cancel-button").on("click",
			function() {
				var row = $(this).closest("tr");
				$(".record-toolbar li", row).toggleClass("hide");
				$(".cell-value", row).toggleClass("hide");
				$("input, select, textarea", row).toggleClass("hide");
			});

		$(".save-button").on("click",
			function() {
				var row = $(this).closest("tr");
				var record = getRecord(row);

				$.ajax({
					url: '@Url.Action("CreateOrSave","Setting")',
					data: JSON.stringify(record),
					type: 'POST',
					contentType: 'application/json; charset=utf-8',
					success: function (response) {
						if (!response.success) {
							AppCore.handleMessage(response.message);
						} else {
							tr.find('.edit-mode, .display-mode').toggle();
						}
					}
				});

				//webGridHubClient.server.saveRecord(record);
				$("td", row).each(function() {
					var cell = $(this, row);
					var inputValue = $("input", cell);
					$(".cell-value", cell).text(inputValue.val());
				});
				$(".record-toolbar li", row).toggleClass("hide");
				$("input, select, textarea", row).toggleClass("hide");
				$(".cell-value", row).toggleClass("hide");
			});

		//isCreate: nếu isCreate ==1: set id = '' để insert
		function getRecord(row) {
			return {
				id: row.find("#hddId").val(),
				name: row.find(":nth-child(2)").find("input").val().trim(),
				value: row.find(":nth-child(3)").find("input").val().trim()
			};
		};

		$.connection.hub.start();

	});

	$("#hypCreate").on("click",
		function() {
			$.ajax({
				url: '@Url.Action("NewRow", "Setting")',
				data: '',
				type: 'POST',
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if ($("#grid tbody").length > 0) {
						$("#grid tbody").before(response.data);
					} else {
						$("#grid tbody tr:first").before(response.data);
					}

				}
			});
		});

    $(".remove-button").on("click", function () {
        var row = $(this).closest("tr");
        var id = row.find("#hddId").val();

        var data = {"id": id};
        $.ajax({
            url: '@Url.Action("Delete", "Setting")',
            data: data,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            success: function () {
                location.reload();
            }
        });
    });

</script>